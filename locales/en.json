{
	"class-validator.array-contains": "$property must contain $constraint1 values",
	"class-validator.array-contains-each": "each value $property must contain $constraint1 values",
	"class-validator.array-max-size": "$property must contain no more than $constraint1 elements",
	"class-validator.array-max-size-each": "each value $property must contain no more than $constraint1 elements",
	"class-validator.array-min-size": "$property must contain at least $constraint1 elements",
	"class-validator.array-min-size-each": "each value $property must contain at least $constraint1 elements",
	"class-validator.array-not-contains": "$property should not contain $constraint1 values",
	"class-validator.array-not-contains-each": "each value $property should not contain $constraint1 values",
	"class-validator.array-not-empty": "$property should not be empty",
	"class-validator.array-not-empty-each": "each value $property should not be empty",
	"class-validator.array-unique": "All $property's elements must be unique",
	"class-validator.array-unique-each": "each value all $property's elements must be unique",
	"class-validator.equals": "$property must be equal to $constraint1",
	"class-validator.equals-each": "each value $property must be equal to $constraint1",
	"class-validator.is-defined": "$property should not be null or undefined",
	"class-validator.is-defined-each": "each value $property should not be null or undefined",
	"class-validator.is-empty": "$property must be empty",
	"class-validator.is-empty-each": "each value $property must be empty",
	"class-validator.is-in": "$property must be one of the following values: $constraint1",
	"class-validator.is-in-each": "each value $property must be one of the following values: $constraint1",
	"class-validator.is-latitude": "$property must be a latitude string or number",
	"class-validator.is-latitude-each": "each value $property must be a latitude string or number",
	"class-validator.is-lat-long": "$property must be a latitude,longitude string",
	"class-validator.is-lat-long-each": "each value $property must be a latitude,longitude string",
	"class-validator.is-longitude": "$property must be a longitude string or number",
	"class-validator.is-longitude-each": "each value $property must be a longitude string or number",
	"class-validator.is-not-empty": "$property should not be empty",
	"class-validator.is-not-empty-each": "each value $property should not be empty",
	"class-validator.is-not-in": "$property should not be one of the following values: $constraint1",
	"class-validator.is-not-in-each": "each value $property should not be one of the following values: $constraint1",
	"class-validator.not-equals": "$property should not be equal to $constraint1",
	"class-validator.not-equals-each": "each value $property should not be equal to $constraint1",
	"class-validator.max-date": "maximal allowed date for $property is $constraint1",
	"class-validator.max-date-each": "maximal allowed date for each value $property is $constraint1",
	"class-validator.min-date": "minimal allowed date for $property is $constraint1",
	"class-validator.min-date-each": "minimal allowed date for each value $property is $constraint1",
	"class-validator.is-divisible-by": "$property must be divisible by $constraint1",
	"class-validator.is-divisible-by-each": "each value $property must be divisible by $constraint1",
	"class-validator.is-negative": "$property must be a negative number",
	"class-validator.is-negative-each": "each value $property must be a negative number",
	"class-validator.is-positive": "$property must be a positive number",
	"class-validator.is-positive-each": "each value $property must be a positive number",
	"class-validator.max": "$property must not be greater than $constraint1",
	"class-validator.max-each": "each value $property must not be greater than $constraint1",
	"class-validator.min": "$property must not be less than $constraint1",
	"class-validator.min-each": "each value $property must not be less than $constraint1",
	"class-validator.is-instance": "$property must be an instance of $constraint1",
	"class-validator.is-instance-eac": "each value $property must be an instance of $constraint1",
	"class-validator.is-not-empty-object": "$property must be a non-empty object",
	"class-validator.is-not-empty-object-each": "each value $property must be a non-empty object",
	"class-validator.contains": "$property must contain a $constraint1 string",
	"class-validator.contains-each": "each value in $property must contain a $constraint1 string",
	"class-validator.is-iso4217-currency-code": "$property must be a valid ISO4217 currency code",
	"class-validator.is-iso4217-currency-code-each": "each value $property must be a valid ISO4217 currency code",
	"class-validator.is-tax-id": "$property must be a Tax Identification Number",
	"class-validator.is-tax-id-each": "each value $property must be a Tax Identification Number",
	"class-validator.is-alpha": "$property must contain only letters (a-zA-Z)",
	"class-validator.is-alpha-each": "each value $property must contain only letters (a-zA-Z)",
	"class-validator.is-alphanumeric": "$property must contain only letters and numbers",
	"class-validator.is-alphanumeric-each": "each value $property must contain only letters and numbers",
	"class-validator.is-ascii": "$property must contain only ASCII characters",
	"class-validator.is-ascii-each": "each value $property must contain only ASCII characters",
	"class-validator.is-base32": "$property must be base32 encoded",
	"class-validator.is-base32-each": "each value $property must be base32 encoded",
	"class-validator.is-base58": "$property must be base58 encoded",
	"class-validator.is-base58-each": "each value $property must be base58 encoded",
	"class-validator.is-base64": "$property must be base64 encoded",
	"class-validator.is-base64-each": "each value $property must be base64 encoded",
	"class-validator.is-bic": "$property must be a BIC or SWIFT code",
	"class-validator.is-bic-each": "each value $property must be a BIC or SWIFT code",
	"class-validator.is-boolean-string": "$property must be a boolean string",
	"class-validator.is-boolean-string-each": "each value $property must be a boolean string",
	"class-validator.is-btc-address-each": "$property must be a BTC address",
	"class-validator.is-btc-address-each-each": "each value $property must be a BTC address",
	"class-validator.is-byte-length": "$property's byte length must fall into ($constraint1, $constraint2) range",
	"class-validator.is-byte-length-each": "each value $property's byte length must fall into ($constraint1, $constraint2) range",
	"class-validator.is-credit-card": "$property must be a credit card",
	"class-validator.is-credit-card-each": "each value $property must be a credit card",
	"class-validator.is-currency": "$property must be a currency",
	"class-validator.is-currency-each": "each value $property must be a currency",
	"class-validator.is-data-uri": "$property must be a data uri format",
	"class-validator.is-data-uri-each": "each value $property must be a data uri format",
	"class-validator.is-date-string": "$property must be a valid ISO 8601 date string",
	"class-validator.is-date-string-each": "each value $property must be a valid ISO 8601 date string",
	"class-validator.is-decimal": "$property is not a valid decimal number.",
	"class-validator.is-decimal-each": "each value $property is not a valid decimal number.",
	"class-validator.is-ean": "$property must be an EAN (European Article Number)",
	"class-validator.is-ean-each": "each value $property must be an EAN (European Article Number)",
	"class-validator.is-email": "$property must be an email",
	"class-validator.is-email-each": "each value $property must be an email",
	"class-validator.is-ethereum-address": "$property must be an Ethereum address",
	"class-validator.is-ethereum-address-each": "each value $property must be an Ethereum address",
	"class-validator.is-firebase-push-id": "$property must be a Firebase Push Id",
	"class-validator.is-firebase-push-id-each": "each value $property must be a Firebase Push Id",
	"class-validator.is-fqdn": "$property must be a valid domain name",
	"class-validator.is-fqdn-each": "each value $property must be a valid domain name",
	"class-validator.is-full-width": "$property must contain a full-width characters",
	"class-validator.is-full-width-each": "each value $property must contain a full-width characters",
	"class-validator.is-half-width": "$property must contain a half-width characters",
	"class-validator.is-half-width-each": "each value $property must contain a half-width characters",
	"class-validator.is-hash": "$property must be a hash of type $constraint1",
	"class-validator.is-hash-each": "each value $property must be a hash of type $constraint1",
	"class-validator.is-hexadecimal": "$property must be a hexadecimal number",
	"class-validator.is-hexadecimal-each": "each value $property must be a hexadecimal number",
	"class-validator.is-hex-color": "$property must be a hexadecimal color",
	"class-validator.is-hex-color-each": "each value $property must be a hexadecimal color",
	"class-validator.is-hsl": "$property must be a HSL color",
	"class-validator.is-hsl-each": "each value $property must be a HSL color",
	"class-validator.is-iban": "$property must be an IBAN",
	"class-validator.is-iban-each": "each value $property must be an IBAN",
	"class-validator.is-identity-card": "$property must be a identity card number",
	"class-validator.is-identity-card-each": "each value $property must be a identity card number",
	"class-validator.is-ip": "$property must be an ip address",
	"class-validator.is-ip-each": "each value $property must be an ip address",
	"class-validator.is-isbn": "$property must be an ISBN",
	"class-validator.is-isbn-each": "each value $property must be an ISBN",
	"class-validator.is-isin": "$property must be an ISIN (stock/security identifier)",
	"class-validator.is-isin-each": "each value $property must be an ISIN (stock/security identifier)",
	"class-validator.is-iso-8601": "$property must be a valid ISO 8601 date string",
	"class-validator.is-iso-8601-each": "each value $property must be a valid ISO 8601 date string",
	"class-validator.is-iso31661-alpha2": "$property must be a valid ISO31661 Alpha2 code",
	"class-validator.is-iso31661-alpha2-each": "each value $property must be a valid ISO31661 Alpha2 code",
	"class-validator.is-iso-31661-alpha3": "$property must be a valid ISO31661 Alpha3 code",
	"class-validator.is-iso-31661-alpha3-each": "each value $property must be a valid ISO31661 Alpha3 code",
	"class-validator.is-isrc": "$property must be an ISRC",
	"class-validator.is-isrc-each-each": "each value $property must be an ISRC",
	"class-validator.is-issn": "$property must be a ISSN",
	"class-validator.is-issn-each": "each value $property must be a ISSN",
	"class-validator.is-json": "$property must be a json string",
	"class-validator.is-json-each": "each value $property must be a json string",
	"class-validator.is-jwt": "$property must be a jwt string",
	"class-validator.is-jwt-each": "each value $property must be a jwt string",
	"class-validator.is-locale": "$property must be locale",
	"class-validator.is-locale-each": "each value $property must be locale",
	"class-validator.is-lowercase": "$property must be a lowercase string",
	"class-validator.is-lowercase-each": "each value $property must be a lowercase string",
	"class-validator.is-mac-address": "$property must be a MAC Address",
	"class-validator.is-mac-address-each": "each value $property must be a MAC Address",
	"class-validator.is-magnet-uri": "$property must be magnet uri format",
	"class-validator.is-magnet-uri-each": "each value $property must be magnet uri format",
	"class-validator.is-military-time": "$property must be a valid representation of military time in the format HH:MM",
	"class-validator.is-military-time-each": "each value $property must be a valid representation of military time in the format HH:MM",
	"class-validator.is-mime-type": "$property must be MIME type format",
	"class-validator.is-mime-type-each": "each value $property must be MIME type format",
	"class-validator.is-mobile-phone": "$property must be a phone number",
	"class-validator.is-mobile-phone-each": "each value $property must be a phone number",
	"class-validator.is-mongo-id": "$property must be a mongodb id",
	"class-validator.is-mongo-id-each": "each value $property must be a mongodb id",
	"class-validator.is-multibyte": "$property must contain one or more multibyte chars",
	"class-validator.is-multibyte-each": "each value $property must contain one or more multibyte chars",
	"class-validator.is-number-string": "$property must be a number string",
	"class-validator.is-number-string-each": "each value $property must be a number string",
	"class-validator.is-octal": "$property must be valid octal number",
	"class-validator.is-octal-each": "each value $property must be valid octal number",
	"class-validator.is-passport-number": "$property must be valid passport number",
	"class-validator.is-passport-number-each": "each value $property must be valid passport number",
	"class-validator.is-phone-number": "$property must be a valid phone number",
	"class-validator.is-phone-number-each": "each value $property must be a valid phone number",
	"class-validator.is-port": "$property must be a port",
	"class-validator.is-port-each": "each value $property must be a port",
	"class-validator.is-postal-code": "$property must be a postal code",
	"class-validator.is-postal-code-each": "each value $property must be a postal code",
	"class-validator.is-rfc-3339": "$property must be RFC 3339 date",
	"class-validator.is-rfc-3339-each": "each value $property must be RFC 3339 date",
	"class-validator.is-rgb-color": "$property must be RGB color",
	"class-validator.is-rgb-color-each": "each value $property must be RGB color",
	"class-validator.is-sem-ver": "$property must be a Semantic Versioning Specification",
	"class-validator.is-sem-ver-each": "each value $property must be a Semantic Versioning Specification",
	"class-validator.is-strong-password": "$property is not strong enough",
	"class-validator.is-strong-password-each": "each value $property is not strong enough",
	"class-validator.is-surrogate-pair": "$property must contain any surrogate pairs chars",
	"class-validator.is-surrogate-pair-each": "each value $property must contain any surrogate pairs chars",
	"class-validator.is-time-zone": "$property must be a valid IANA time-zone",
	"class-validator.is-time-zone-each": "each value $property must be a valid IANA time-zone",
	"class-validator.is-uppercase": "$property must be uppercase",
	"class-validator.is-uppercase-each": "each value $property must be uppercase",
	"class-validator.is-url": "$property must be a URL address",
	"class-validator.is-url-each": "each value $property must be a URL address",
	"class-validator.is-uuid": "$property must be a UUID",
	"class-validator.is-uuid-each": "each value $property must be a UUID",
	"class-validator.is-variable-width": "$property must contain a full-width and half-width characters",
	"class-validator.is-variable-width-each": "each value $property must contain a full-width and half-width characters",
	"class-validator.is-min-length": "$property must be longer than or equal to $constraint1 characters",
	"class-validator.is-min-length-each": "each value $property must be longer than or equal to $constraint1 characters",
	"class-validator.is-max-length": "$property must be shorter than or equal to $constraint2 characters",
	"class-validator.is-max-length-each": "each value $property must be shorter than or equal to $constraint2 characters",
	"class-validator.length": "$property must be longer than or equal to $constraint1 and shorter than or equal to $constraint2 characters",
	"class-validator.length-each": "each value $property must be longer than or equal to $constraint1 and shorter than or equal to $constraint2 characters",
	"class-validator.matches": "$property must match $constraint1 regular expression",
	"class-validator.matches-each": "each value $property must match $constraint1 regular expression",
	"class-validator.max-length": "$property must be shorter than or equal to $constraint1 characters",
	"class-validator.max-length-each": "each value $property must be shorter than or equal to $constraint1 characters",
	"class-validator.min-length": "$property must be longer than or equal to $constraint1 characters",
	"class-validator.min-length-each": "each value $property must be longer than or equal to $constraint1 characters",
	"class-validator.not-contains": "$property should not contain a $constraint1 string",
	"class-validator.not-contains-each": "each value $property should not contain a $constraint1 string",
	"class-validator.is-array": "$property must be an array",
	"class-validator.is-array-each": "each value $property must be an array",
	"class-validator.is-boolean": "$property must be a boolean value",
	"class-validator.is-boolean-each": "each value $property must be a boolean value",
	"class-validator.is-date": "$property must be a Date instance",
	"class-validator.is-date-each": "each value $property must be a Date instance",
	"class-validator.is-enum": "$property must be one of the following values: $constraint2",
	"class-validator.is-enum-each": "each value $property must be one of the following values: $constraint2",
	"class-validator.is-int": "$property must be an integer number",
	"class-validator.is-int-each": "each value $property must be an integer number",
	"class-validator.is-number": "$property must be a number conforming to the specified constraints",
	"class-validator.is-number-each": "each value $property must be a number conforming to the specified constraints",
	"class-validator.is-object": "$property must be an object",
	"class-validator.is-object-each": "each value $property must be an object",
	"class-validator.is-string": "$property must be a string",
	"class-validator.is-string-each": "each value $property must be a string"
}