{
	"class-validator.array-contains": "$property debe contener valores de $constraint1",
	"class-validator.array-contains-each": "cada valor de $property debe contener valores de $constraint1",
	"class-validator.array-max-size": "$property no debe contener más de $constraint1 elementos",
	"class-validator.array-max-size-each": "cada valor de $property no debe contener más de $constraint1 elementos",
	"class-validator.array-min-size": "$property debe contener al menos $constraint1 elementos",
	"class-validator.array-min-size-each": "cada valor de $property debe contener al menos $constraint1 elementos",
	"class-validator.array-not-contains": "$property no debe contener valores de $constraint1",
	"class-validator.array-not-contains-each": "cada valor de $property no debe contener valores de $constraint1",
	"class-validator.array-not-empty": "$property no debe estar vacío",
	"class-validator.array-not-empty-each": "cada valor de $property no debe estar vacío",
	"class-validator.array-unique": "Todos los elementos de $property deben ser únicos",
	"class-validator.array-unique-each": "cada valor, todos los elementos de $property deben ser únicos",
	"class-validator.equals": "$property debe ser igual a $constraint1",
	"class-validator.equals-each": "cada valor de $property debe ser igual a $constraint1",
	"class-validator.is-defined": "$property no debe ser nulo o indefinido",
	"class-validator.is-defined-each": "cada valor de $property no debe ser nulo o indefinido",
	"class-validator.is-empty": "$property debe estar vacío",
	"class-validator.is-empty-each": "cada valor de $property debe estar vacío",
	"class-validator.is-in": "$property debe ser uno de los siguientes valores: $constraint1",
	"class-validator.is-in-each": "cada valor de $property debe ser uno de los siguientes valores: $constraint1",
	"class-validator.is-latitude": "$property debe ser una cadena o número de latitud",
	"class-validator.is-latitude-each": "cada valor de $property debe ser una cadena o número de latitud",
	"class-validator.is-lat-long": "$property debe ser una cadena de latitud,longitud",
	"class-validator.is-lat-long-each": "cada valor de $property debe ser una cadena de latitud,longitud",
	"class-validator.is-longitude": "$property debe ser una cadena o número de longitud",
	"class-validator.is-longitude-each": "cada valor de $property debe ser una cadena o número de longitud",
	"class-validator.is-not-empty": "$property no debe estar vacío",
	"class-validator.is-not-empty-each": "cada valor de $property no debe estar vacío",
	"class-validator.is-not-in": "$property no debe ser uno de los siguientes valores: $constraint1",
	"class-validator.is-not-in-each": "cada valor de $property no debe ser uno de los siguientes valores: $constraint1",
	"class-validator.not-equals": "$property no debe ser igual a $constraint1",
	"class-validator.not-equals-each": "cada valor de $property no debe ser igual a $constraint1",
	"class-validator.max-date": "la fecha máxima permitida para $property es $constraint1",
	"class-validator.max-date-each": "la fecha máxima permitida para cada valor de $property es $constraint1",
	"class-validator.min-date": "la fecha mínima permitida para $property es $constraint1",
	"class-validator.min-date-each": "la fecha mínima permitida para cada valor de $property es $constraint1",
	"class-validator.is-divisible-by": "$property debe ser divisible por $constraint1",
	"class-validator.is-divisible-by-each": "cada valor de $property debe ser divisible por $constraint1",
	"class-validator.is-negative": "$property debe ser un número negativo",
	"class-validator.is-negative-each": "cada valor de $property debe ser un número negativo",
	"class-validator.is-positive": "$property debe ser un número positivo",
	"class-validator.is-positive-each": "cada valor de $property debe ser un número positivo",
	"class-validator.max": "$property no debe ser mayor que $constraint1",
	"class-validator.max-each": "cada valor de $property no debe ser mayor que $constraint1",
	"class-validator.min": "$property no debe ser menor que $constraint1",
	"class-validator.min-each": "cada valor de $property no debe ser menor que $constraint1",
	"class-validator.is-instance": "$property debe ser una instancia de $constraint1",
	"class-validator.is-instance-eac": "cada valor de $property debe ser una instancia de $constraint1",
	"class-validator.is-not-empty-object": "$property debe ser un objeto no vacío",
	"class-validator.is-not-empty-object-each": "cada valor de $property debe ser un objeto no vacío",
	"class-validator.contains": "$property debe contener una cadena $constraint1",
	"class-validator.contains-each": "cada valor en $property debe contener una cadena $constraint1",
	"class-validator.is-iso4217-currency-code": "$property debe ser un código de moneda ISO4217 válido",
	"class-validator.is-iso4217-currency-code-each": "cada valor de $property debe ser un código de moneda ISO4217 válido",
	"class-validator.is-tax-id": "$property debe ser un número de identificación fiscal",
	"class-validator.is-tax-id-each": "cada valor de $property debe ser un número de identificación fiscal",
	"class-validator.is-alpha": "$property debe contener solo letras (a-zA-Z)",
	"class-validator.is-alpha-each": "cada valor de $property debe contener solo letras (a-zA-Z)",
	"class-validator.is-alphanumeric": "$property debe contener solo letras y números",
	"class-validator.is-alphanumeric-each": "cada valor de $property debe contener solo letras y números",
	"class-validator.is-ascii": "$property debe contener solo caracteres ASCII",
	"class-validator.is-ascii-each": "cada valor de $property debe contener solo caracteres ASCII",
	"class-validator.is-base32": "$property debe estar codificado en base32",
	"class-validator.is-base32-each": "cada valor de $property debe estar codificado en base32",
	"class-validator.is-base58": "$property debe estar codificado en base58",
	"class-validator.is-base58-each": "cada valor de $property debe estar codificado en base58",
	"class-validator.is-base64": "$property debe estar codificado en base64",
	"class-validator.is-base64-each": "cada valor de $property debe estar codificado en base64",
	"class-validator.is-bic": "$property debe ser un código BIC o SWIFT",
	"class-validator.is-bic-each": "cada valor de $property debe ser un código BIC o SWIFT",
	"class-validator.is-boolean-string": "$property debe ser una cadena booleana",
	"class-validator.is-boolean-string-each": "cada valor de $property debe ser una cadena booleana",
	"class-validator.is-btc-address-each": "$property debe ser una dirección BTC",
	"class-validator.is-btc-address-each-each": "cada valor de $property debe ser una dirección BTC",
	"class-validator.is-byte-length": "la longitud en bytes de $property debe estar en el rango ($constraint1, $constraint2)",
	"class-validator.is-byte-length-each": "cada valor de $property debe estar en el rango ($constraint1, $constraint2)",
	"class-validator.is-credit-card": "$property debe ser una tarjeta de crédito",
	"class-validator.is-credit-card-each": "cada valor de $property debe ser una tarjeta de crédito",
	"class-validator.is-currency": "$property debe ser una moneda",
	"class-validator.is-currency-each": "cada valor de $property debe ser una moneda",
	"class-validator.is-data-uri": "$property debe tener formato de URI de datos",
	"class-validator.is-data-uri-each": "cada valor de $property debe tener formato de URI de datos",
	"class-validator.is-date-string": "$property debe ser una cadena de fecha ISO 8601 válida",
	"class-validator.is-date-string-each": "cada valor de $property debe ser una cadena de fecha ISO 8601 válida",
	"class-validator.is-decimal": "$property no es un número decimal válido.",
	"class-validator.is-decimal-each": "cada valor de $property no es un número decimal válido.",
	"class-validator.is-ean": "$property debe ser un número de artículo europeo (EAN)",
	"class-validator.is-ean-each": "cada valor de $property debe ser un número de artículo europeo (EAN)",
	"class-validator.is-email": "$property debe ser un correo electrónico",
	"class-validator.is-email-each": "cada valor de $property debe ser un correo electrónico",
	"class-validator.is-ethereum-address": "$property debe ser una dirección Ethereum",
	"class-validator.is-ethereum-address-each": "cada valor de $property debe ser una dirección Ethereum",
	"class-validator.is-firebase-push-id": "$property debe ser un Firebase Push Id",
	"class-validator.is-firebase-push-id-each": "cada valor de $property debe ser un Firebase Push Id",
	"class-validator.is-fqdn": "$property debe ser un nombre de dominio válido",
	"class-validator.is-fqdn-each": "cada valor de $property debe ser un nombre de dominio válido",
	"class-validator.is-full-width": "$property debe contener caracteres de ancho completo",
	"class-validator.is-full-width-each": "cada valor de $property debe contener caracteres de ancho completo",
	"class-validator.is-half-width": "$property debe contener caracteres de medio ancho",
	"class-validator.is-half-width-each": "cada valor de $property debe contener caracteres de medio ancho",
	"class-validator.is-hash": "$property debe ser un hash de tipo $constraint1",
	"class-validator.is-hash-each": "cada valor de $property debe ser un hash de tipo $constraint1",
	"class-validator.is-hexadecimal": "$property debe ser un número hexadecimal",
	"class-validator.is-hexadecimal-each": "cada valor de $property debe ser un número hexadecimal",
	"class-validator.is-hex-color": "$property debe ser un color hexadecimal",
	"class-validator.is-hex-color-each": "cada valor de $property debe ser un color hexadecimal",
	"class-validator.is-hsl": "$property debe ser un color HSL",
	"class-validator.is-hsl-each": "cada valor de $property debe ser un color HSL",
	"class-validator.is-iban": "$property debe ser un IBAN",
	"class-validator.is-iban-each": "cada valor de $property debe ser un IBAN",
	"class-validator.is-identity-card": "$property debe ser un número de documento de identidad",
	"class-validator.is-identity-card-each": "cada valor de $property debe ser un número de documento de identidad",
	"class-validator.is-ip": "$property debe ser una dirección IP",
	"class-validator.is-ip-each": "cada valor de $property debe ser una dirección IP",
	"class-validator.is-isbn": "$property debe ser un ISBN",
	"class-validator.is-isbn-each": "cada valor de $property debe ser un ISBN",
	"class-validator.is-isin": "$property debe ser un ISIN (identificador de acciones/valores)",
	"class-validator.is-isin-each": "cada valor de $property debe ser un ISIN (identificador de acciones/valores)",
	"class-validator.is-iso-8601": "$property debe ser una cadena de fecha ISO 8601 válida",
	"class-validator.is-iso-8601-each": "cada valor de $property debe ser una cadena de fecha ISO 8601 válida",
	"class-validator.is-iso31661-alpha2": "$property debe ser un código ISO31661 Alpha2 válido",
	"class-validator.is-iso31661-alpha2-each": "cada valor de $property debe ser un código ISO31661 Alpha2 válido",
	"class-validator.is-iso-31661-alpha3": "$property debe ser un código ISO31661 Alpha3 válido",
	"class-validator.is-iso-31661-alpha3-each": "cada valor de $property debe ser un código ISO31661 Alpha3 válido",
	"class-validator.is-isrc": "$property debe ser un ISRC",
	"class-validator.is-isrc-each-each": "cada valor de $property debe ser un ISRC",
	"class-validator.is-issn": "$property debe ser un ISSN",
	"class-validator.is-issn-each": "cada valor de $property debe ser un ISSN",
	"class-validator.is-json": "$property debe ser una cadena JSON",
	"class-validator.is-json-each": "cada valor de $property debe ser una cadena JSON",
	"class-validator.is-jwt": "$property debe ser una cadena JWT",
	"class-validator.is-jwt-each": "cada valor de $property debe ser una cadena JWT",
	"class-validator.is-locale": "$property debe ser un local",
	"class-validator.is-locale-each": "cada valor de $property debe ser un local",
	"class-validator.is-lowercase": "$property debe ser una cadena en minúsculas",
	"class-validator.is-lowercase-each": "cada valor de $property debe ser una cadena en minúsculas",
	"class-validator.is-mac-address": "$property debe ser una dirección MAC",
	"class-validator.is-mac-address-each": "cada valor de $property debe ser una dirección MAC",
	"class-validator.is-magnet-uri": "$property debe tener formato de URI magnet",
	"class-validator.is-magnet-uri-each": "cada valor de $property debe tener formato de URI magnet",
	"class-validator.is-military-time": "$property debe ser una representación válida del tiempo militar en el formato HH:MM",
	"class-validator.is-military-time-each": "cada valor de $property debe ser una representación válida del tiempo militar en el formato HH:MM",
	"class-validator.is-mime-type": "$property debe tener formato MIME",
	"class-validator.is-mime-type-each": "cada valor de $property debe tener formato MIME",
	"class-validator.is-mobile-phone": "$property debe ser un número de teléfono",
	"class-validator.is-mobile-phone-each": "cada valor de $property debe ser un número de teléfono",
	"class-validator.is-mongo-id": "$property debe ser un ID de MongoDB",
	"class-validator.is-mongo-id-each": "cada valor de $property debe ser un ID de MongoDB",
	"class-validator.is-multibyte": "$property debe contener uno o más caracteres multibyte",
	"class-validator.is-multibyte-each": "cada valor de $property debe contener uno o más caracteres multibyte",
	"class-validator.is-number-string": "$property debe ser una cadena numérica",
	"class-validator.is-number-string-each": "cada valor de $property debe ser una cadena numérica",
	"class-validator.is-octal": "$property debe ser un número octal válido",
	"class-validator.is-octal-each": "cada valor de $property debe ser un número octal válido",
	"class-validator.is-passport-number": "$property debe ser un número de pasaporte válido",
	"class-validator.is-passport-number-each": "cada valor de $property debe ser un número de pasaporte válido",
	"class-validator.is-phone-number": "$property debe ser un número de teléfono válido",
	"class-validator.is-phone-number-each": "cada valor de $property debe ser un número de teléfono válido",
	"class-validator.is-port": "$property debe ser un puerto",
	"class-validator.is-port-each": "cada valor de $property debe ser un puerto",
	"class-validator.is-postal-code": "$property debe ser un código postal",
	"class-validator.is-postal-code-each": "cada valor de $property debe ser un código postal",
	"class-validator.is-rfc-3339": "$property debe ser una fecha RFC 3339",
	"class-validator.is-rfc-3339-each": "cada valor de $property debe ser una fecha RFC 3339",
	"class-validator.is-rgb-color": "$property debe ser un color RGB",
	"class-validator.is-rgb-color-each": "cada valor de $property debe ser un color RGB",
	"class-validator.is-sem-ver": "$property debe ser una especificación de versión semántica",
	"class-validator.is-sem-ver-each": "cada valor de $property debe ser una especificación de versión semántica",
	"class-validator.is-strong-password": "$property no es lo suficientemente fuerte",
	"class-validator.is-strong-password-each": "cada valor de $property no es lo suficientemente fuerte",
	"class-validator.is-surrogate-pair": "$property debe contener caracteres de pares sustitutos",
	"class-validator.is-surrogate-pair-each": "cada valor de $property debe contener caracteres de pares sustitutos",
	"class-validator.is-time-zone": "$property debe ser una zona horaria válida de IANA",
	"class-validator.is-time-zone-each": "cada valor de $property debe ser una zona horaria válida de IANA",
	"class-validator.is-uppercase": "$property debe estar en mayúsculas",
	"class-validator.is-uppercase-each": "cada valor de $property debe estar en mayúsculas",
	"class-validator.is-url": "$property debe ser una dirección URL",
	"class-validator.is-url-each": "cada valor de $property debe ser una dirección URL",
	"class-validator.is-uuid": "$property debe ser un UUID",
	"class-validator.is-uuid-each": "cada valor de $property debe ser un UUID",
	"class-validator.is-variable-width": "$property debe contener caracteres de ancho completo y medio ancho",
	"class-validator.is-variable-width-each": "cada valor $property debe contener caracteres de ancho completo y medio ancho",
	"class-validator.is-min-length": "$property debe tener una longitud mayor o igual a $constraint1 caracteres",
	"class-validator.is-min-length-each": "cada valor $property debe tener una longitud mayor o igual a $constraint1 caracteres",
	"class-validator.is-max-length": "$property debe tener una longitud menor o igual a $constraint2 caracteres",
	"class-validator.is-max-length-each": "cada valor $property debe tener una longitud menor o igual a $constraint2 caracteres",
	"class-validator.length": "$property debe tener una longitud mayor o igual a $constraint1 y menor o igual a $constraint2 caracteres",
	"class-validator.length-each": "cada valor $property debe tener una longitud mayor o igual a $constraint1 y menor o igual a $constraint2 caracteres",
	"class-validator.matches": "$property debe coincidir con la expresión regular $constraint1",
	"class-validator.matches-each": "cada valor $property debe coincidir con la expresión regular $constraint1",
	"class-validator.max-length": "$property debe tener una longitud menor o igual a $constraint1 caracteres",
	"class-validator.max-length-each": "cada valor $property debe tener una longitud menor o igual a $constraint1 caracteres",
	"class-validator.min-length": "$property debe tener una longitud mayor o igual a $constraint1 caracteres",
	"class-validator.min-length-each": "cada valor $property debe tener una longitud mayor o igual a $constraint1 caracteres",
	"class-validator.not-contains": "$property no debe contener una cadena $constraint1",
	"class-validator.not-contains-each": "cada valor $property no debe contener una cadena $constraint1",
	"class-validator.is-array": "$property debe ser un arreglo",
	"class-validator.is-array-each": "cada valor $property debe ser un arreglo",
	"class-validator.is-boolean": "$property debe ser un valor booleano",
	"class-validator.is-boolean-each": "cada valor $property debe ser un valor booleano",
	"class-validator.is-date": "$property debe ser una instancia de Date",
	"class-validator.is-date-each": "cada valor $property debe ser una instancia de Date",
	"class-validator.is-enum": "$property debe ser uno de los siguientes valores: $constraint2",
	"class-validator.is-enum-each": "cada valor $property debe ser uno de los siguientes valores: $constraint2",
	"class-validator.is-int": "$property debe ser un número entero",
	"class-validator.is-int-each": "cada valor $property debe ser un número entero",
	"class-validator.is-number": "$property debe ser un número que cumpla con las restricciones especificadas",
	"class-validator.is-number-each": "cada valor $property debe ser un número que cumpla con las restricciones especificadas",
	"class-validator.is-object": "$property debe ser un objeto",
	"class-validator.is-object-each": "cada valor $property debe ser un objeto",
	"class-validator.is-string": "$property debe ser una cadena de texto",
	"class-validator.is-string-each": "cada valor $property debe ser una cadena de texto"
}